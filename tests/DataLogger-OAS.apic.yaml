{"TYPE":"APICSuite","value":{"_id":"1610344007105-92fc65f1c333","name":"DataLogger","projId":"1607889686288-5a0cd47de21a","_created":1610344007105,"_modified":1624389694911,"reqs":[{"_id":"1624690404154-ab20ca170b34","_time":1624690404154,"_modified":1624690404154,"url":"{{scheme}}{{host}}/users","name":"Create user","method":"POST","Req":{"url_params":[{"key":"","val":"","active":true},{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"Basic dGVzdDpwYXNz","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"\napic.test('$response.data.username should be equal to \"test1\"', function(){\n\texpect($response.data.username).to.be.eql(\"test1\");\n})\n\napic.test('$response.data.email should be equal to \"test1@test.com\"', function(){\n\texpect($response.data.email).to.be.eql(\"test1@test.com\");\n})\n\napic.test('$response.data.admin should be equal to true', function(){\n\texpect($response.data.admin).to.be.eql(true);\n})\n\napic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object","properties":{"id":{"type":"integer"},"username":{"type":"string"},"email":{"type":"string"},"is_admin":{"type":"boolean"}},"required":["id","username","email","is_admin"]}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{\n\t\"username\": \"test1\",\n\t\"email\": \"test1@test.com\",\n\t\"password\": \"pass1\",\n\t\"admin\": true\n}"},"data":"{\n\t\"username\": \"test1\",\n\t\"email\": \"test1@test.com\",\n\t\"password\": \"pass1\",\n\t\"admin\": true\n}"},{"_id":"1620203974142-826cd419c6c35","_time":1620203974142,"_modified":1620203974142,"url":"{{scheme}}{{host}}/users","name":"Get list of users","method":"GET","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"\napic.test('$response.data[0].id should be equal to 0', function(){\n\texpect($response.data[0].id).to.be.eql(0);\n})\n\napic.test('$response.data[0].username should be equal to \"test\"', function(){\n\texpect($response.data[0].username).to.be.eql(\"test\");\n})\n\napic.test('$response.data[0].email should be equal to \"test@test.com\"', function(){\n\texpect($response.data[0].email).to.be.eql(\"test@test.com\");\n})\n\napic.test('$response.data[0].admin should be equal to true', function(){\n\texpect($response.data[0].admin).to.be.eql(true);\n})\n\napic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})","savedResp":[],"respCodes":[{"code":"200","data":{"type":["array"],"items":{"type":["object"],"properties":{"id":{"type":["integer"]},"username":{"type":["string"]},"email":{"type":["string"]},"is_admin":{"type":["boolean"]}},"required":["id","username","email","is_admin"]}}},{"code":"400","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"401","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"403","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"404","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"}}},{"_id":"1623649137997-3a1ac9426bc16","_time":1623649137997,"_modified":1623649137997,"url":"{{scheme}}{{host}}/users/{{newUserId}}","name":"Get detail of user by newUserId","method":"GET","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"\napic.test('$response.data.id should be equal to 1', function(){\n\texpect($response.data.id).to.be.eql(1);\n})\n\napic.test('$response.data.username should be equal to \"test1\"', function(){\n\texpect($response.data.username).to.be.eql(\"test1\");\n})\n\napic.test('$response.data.email should be equal to \"test1@test.com\"', function(){\n\texpect($response.data.email).to.be.eql(\"test1@test.com\");\n})\n\napic.test('$response.data.admin should be equal to true', function(){\n\texpect($response.data.admin).to.be.eql(true);\n})\n\napic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})","savedResp":[],"respCodes":[{"code":"200","data":{"type":["object"],"properties":{"id":{"type":["integer"]},"username":{"type":["string"]},"email":{"type":["string"]},"is_admin":{"type":["boolean"]}},"required":["id","username","email","is_admin"]}},{"code":"400","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"401","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"403","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"404","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"}}},{"_id":"1624247354138-5f7c2d32f3953","_time":1624247354138,"_modified":1624247354138,"url":"{{scheme}}{{host}}/users/{{newUserId}}","name":"Update user details by userId","method":"PUT","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"\napic.test('$response.data.id should be equal to 1', function(){\n\texpect($response.data.id).to.be.eql(1);\n})\n\napic.test('$response.data.username should be equal to \"test2\"', function(){\n\texpect($response.data.username).to.be.eql(\"test2\");\n})\n\napic.test('$response.data.admin should be equal to true', function(){\n\texpect($response.data.admin).to.be.eql(true);\n})\n\napic.test('$response.data.email should be equal to \"test2@test.com\"', function(){\n\texpect($response.data.email).to.be.eql(\"test2@test.com\");\n})\n\napic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object","properties":{"id":{"type":"integer"},"username":{"type":"string"},"email":{"type":"string"},"is_admin":{"type":"boolean"}},"required":["id","username","email","is_admin"]}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{\n\t\"id\": 1,\n\t\"username\": \"test2\",\n\t\"email\": \"test2@test.com\",\n\t\"password\": \"pass2\",\n\t\"admin\": true\n}"},"data":"{\n\t\"id\": 1,\n\t\"username\": \"test2\",\n\t\"email\": \"test2@test.com\",\n\t\"password\": \"pass2\",\n\t\"admin\": true\n}"},{"_id":"1622403862880-c79fd1da121cc","_time":1622403862880,"_modified":1622403862879,"url":"{{scheme}}{{host}}/users/{{newUserId}}","name":"Delete user by userId","method":"DELETE","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"apic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})","savedResp":[],"respCodes":[{"code":"200","data":{"type":["object"]}},{"code":"400","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"401","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"403","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"404","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{}"},"data":"{}"},{"_id":"1624691137494-4360ee2493a67","_time":1624691137494,"_modified":1624691137494,"url":"{{scheme}}{{host}}/process","name":"Create process","method":"POST","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"Basic dGVzdDpwYXNz","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"\napic.test('$response.data.process.id should be equal to 1', function(){\n\texpect($response.data.process.id).to.be.eql(1);\n})\n\napic.test('$response.data.process.name should be equal to \"test\"', function(){\n\texpect($response.data.process.name).to.be.eql(\"test\");\n})\n\napic.test('$response.data.process.description should be equal to \"test\"', function(){\n\texpect($response.data.process.description).to.be.eql(\"test\");\n})\n\napic.test('$response.data.process.user_id should be equal to \"0\"', function(){\n\texpect($response.data.process.user_id).to.be.eql(0);\n})\n\napic.test('$response.data.process.tables should  exist in response', function(){\n\t expect($response.data.process.tables).not.to.be.undefined;\n})\n\napic.test('$response.data.process.tables[0] should  exist in response', function(){\n\t expect($response.data.process.tables[0]).not.to.be.undefined;\n})\n\napic.test('$response.data.table.name should should be equal to \"test_table\"', function(){\n\t expect($response.data.table.name).to.be.eql(\"test_table\");\n})\n\napic.test('$response.data.table.columns[1] should should be equal to \"test_column\"', function(){\n\t expect($response.data.table.columns[1]).to.be.eql(\"test_column\");\n})\n\napic.test('$response.data.register.test_column should should be equal to 1', function(){\n\t expect($response.data.register.test_column).to.be.eql(1);\n})\n","savedResp":[],"respCodes":[{"code":"201","data":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"description":{"type":"string"},"userId":{"type":"integer"},"configuration":{"type":"string"}}}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{\n    \"process\": {\n        \"name\": \"test\",\n        \"description\": \"test\",\n        \"tables\": []\n    },\n    \"table\": {\n        \"name\": \"test_table\",\n        \"process_id\": 1,\n        \"columns\": [\n            {\n                \"name\": \"id\",\n                \"col_type\": \"Integer\",\n                \"primary_key\": true\n                \n            },\n            {\n                \"name\": \"test_column\",\n                \"col_type\": \"Integer\"\n            }\n        ]\n    },\n    \"register\": {\n        \"process_id\": 1,\n        \"table\": \"test_table\",\n        \"values\": {\n            \"test_column\" : 1 \n        }\n    }\n}"},"data":"{\n    \"process\": {\n        \"name\": \"test\",\n        \"description\": \"test\",\n        \"tables\": []\n    },\n    \"table\": {\n        \"name\": \"test_table\",\n        \"process_id\": 1,\n        \"columns\": [\n            {\n                \"name\": \"id\",\n                \"col_type\": \"Integer\",\n                \"primary_key\": true\n                \n            },\n            {\n                \"name\": \"test_column\",\n                \"col_type\": \"Integer\"\n            }\n        ]\n    },\n    \"register\": {\n        \"process_id\": 1,\n        \"table\": \"test_table\",\n        \"values\": {\n            \"test_column\" : 1 \n        }\n    }\n}"},{"_id":"1624169602845-71042aa843a9e","_time":1624169602845,"_modified":1624169602845,"url":"{{scheme}}{{host}}/process","name":"Get list of process","method":"GET","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"apic.test('$response.data[0].name should be equal to \"test\"', function(){\n\texpect($response.data[0].name).to.be.eql(\"test\");\n})\n\napic.test('$response.data[0].description should be equal to \"test\"', function(){\n\texpect($response.data[0].description).to.be.eql(\"test\");\n})\n\n\n","savedResp":[],"respCodes":[{"code":"200","data":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"description":{"type":"string"},"userId":{"type":"integer"},"configuration":{"type":"string"}}}}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"}}},{"_id":"1624169514685-1ff93536f81af","_time":1624169514685,"_modified":1624169514685,"url":"{{scheme}}{{host}}/process","name":"Get list of process tables","method":"GET","Req":{"url_params":[{"key":"process_id","val":"1","active":true},{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"Basic dGVzdDpwYXNz","active":true},{"key":"","val":"","active":false}]},"prescript":"","postscript":"\n\napic.test('$response.data[0].columns[0].col_type should be equal to \"Integer\"', function(){\n\texpect($response.data[0].columns[0].col_type).to.be.eql(\"Integer\");\n})\n\napic.test('$response.data[0].columns should  exist in response', function(){\n\t expect($response.data[0].columns).not.to.be.undefined;\n})\n","savedResp":[{"status":"200","data":"[\n  {\n    \"columns\": [\n      {\n        \"col_type\": \"Integer\",\n        \"default\": {},\n        \"index\": false,\n        \"name\": \"id\",\n        \"nullable\": false,\n        \"primary_key\": true,\n        \"unique\": false\n      },\n      {\n        \"col_type\": \"Integer\",\n        \"default\": {},\n        \"index\": false,\n        \"name\": \"test_column\",\n        \"nullable\": false,\n        \"unique\": false\n      }\n    ],\n    \"name\": \"test_table\",\n    \"real_name\": \"test_table\"\n  }\n]\n","time":"168 ms","size":"465 B","headers":{"content-length":"465","content-type":"application/json","date":"Fri, 11 Jun 2021 08:17:02 GMT","server":"Werkzeug/1.0.1 Python/3.6.8"}}],"respCodes":[],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"}}},{"_id":"1624250222540-2267d77ba3fea","_time":1624250222540,"_modified":1624250222539,"url":"{{scheme}}{{host}}/process","name":"Get list of process table registers","method":"GET","Req":{"url_params":[{"key":"process_id","val":"1","active":true},{"key":"table","val":"test_table","active":true},{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"Basic dGVzdDpwYXNz","active":true},{"key":"","val":"","active":false}]},"prescript":"","postscript":"\napic.test('$response.data[0].test_column should be equal to 1', function(){\n\texpect($response.data[0].test_column).to.be.eql(1);\n})\n","savedResp":[],"respCodes":[],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"}}},{"_id":"1623908940974-2a7443838857b","_time":1623908940974,"_modified":1623908940974,"url":"{{scheme}}{{host}}/process/{{processId}}","name":"Get detail of process by processId","method":"GET","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"\napic.test('$response.data.id should be equal to 1', function(){\n\texpect($response.data.id).to.be.eql(1);\n})\n\napic.test('$response.data.name should be equal to \"test\"', function(){\n\texpect($response.data.name).to.be.eql(\"test\");\n})\n\napic.test('$response.data.description should be equal to \"test\"', function(){\n\texpect($response.data.description).to.be.eql(\"test\");\n})\n\napic.test('$response.data.user_id should be equal to 0', function(){\n\texpect($response.data.user_id).to.be.eql(0);\n})\n\napic.test('$response.data.tables should  exist in response', function(){\n\t expect($response.data.tables).not.to.be.undefined;\n})\n","savedResp":[],"respCodes":[{"code":"200","data":{"type":["object"],"properties":{"id":{"type":["integer"]},"name":{"type":["string"]},"description":{"type":["string"]},"userId":{"type":["integer"]},"configuration":{"type":["string"]}}}},{"code":"400","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"401","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"403","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"404","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"}}},{"_id":"1624169492010-9f376266d48ff","_time":1624169492010,"_modified":1624169492010,"url":"{{scheme}}{{host}}/process/{{processId}}","name":"Get detail of process table by table name","method":"GET","Req":{"url_params":[{"key":"table","val":"test_table","active":true},{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"apic.test('$response.data.name should be equal to \"test_table\"', function(){\n\texpect($response.data.name).to.be.eql(\"test_table\");\n})\n\napic.test('$response.data.columns[0] should  exist in response', function(){\n\t expect($response.data.columns[0]).not.to.be.undefined;\n})\n\napic.test('$response.data.columns[0].col_type should be equal to \"Integer\"', function(){\n\t expect($response.data.columns[0].col_type).to.be.eql(\"Integer\");\n})\n","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"description":{"type":"string"},"userId":{"type":"integer"},"configuration":{"type":"string"}}}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"}}},{"_id":"1624250191868-49d0fc3b8e32","_time":1624250191868,"_modified":1624250191867,"url":"{{scheme}}{{host}}/process/{{processId}}","name":"Get detail of process table register by id","method":"GET","Req":{"url_params":[{"key":"table","val":"test_table","active":true},{"key":"reg_id","val":"1","active":true},{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"\napic.test('$response.data.test_column should be equal to 1', function(){\n\texpect($response.data.test_column).to.be.eql(1);\n})\n","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"description":{"type":"string"},"userId":{"type":"integer"},"configuration":{"type":"string"}}}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"}}},{"_id":"1624687067930-b5569e8f0d568","_time":1624687067930,"_modified":1624687067930,"url":"{{scheme}}{{host}}/process/{{processId}}","name":"Update process details by processId","method":"PUT","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"\napic.test('$response.data.process.id should be equal to 1', function(){\n\texpect($response.data.process.id).to.be.eql(1);\n})\n\napic.test('$response.data.process.name should be equal to \"test2\"', function(){\n\texpect($response.data.process.name).to.be.eql(\"test2\");\n})\n\napic.test('$response.data.process.description should be equal to \"test2\"', function(){\n\texpect($response.data.process.description).to.be.eql(\"test2\");\n})\n\napic.test('$response.data.process.user_id should be equal to \"0\"', function(){\n\texpect($response.data.process.user_id).to.be.eql(0);\n})\n\napic.test('$response.data.register.test_column should should be equal to 2', function(){\n\t expect($response.data.register.test_column).to.be.eql(2);\n})\n\n\n","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"description":{"type":"string"},"userId":{"type":"integer"},"configuration":{"type":"string"}}}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{\n    \"process\": {\n        \"name\": \"test2\",\n        \"description\": \"test2\"\n    },\n    \"register\": {\n        \"reg_id\": 1,\n        \"process_id\": 1,\n        \"table\": \"test_table\",\n        \"values\": {\n            \"test_column\" : 2\n        }\n    }\n}"},"data":"{\n    \"process\": {\n        \"name\": \"test2\",\n        \"description\": \"test2\"\n    },\n    \"register\": {\n        \"reg_id\": 1,\n        \"process_id\": 1,\n        \"table\": \"test_table\",\n        \"values\": {\n            \"test_column\" : 2\n        }\n    }\n}"},{"_id":"1624169556137-6679a54afd2a9","_time":1624169556137,"_modified":1624169556137,"url":"{{scheme}}{{host}}/process/{{processId}}","name":"Delete process table register  by id","method":"DELETE","Req":{"url_params":[{"key":"table","val":"test_table","active":true},{"key":"reg_id","val":"1","active":true},{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"apic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object"}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{}"},"data":"{}"},{"_id":"1624298756439-192c9ad16da79","_time":1624298756439,"_modified":1624298756439,"url":"{{scheme}}{{host}}/process/{{processId}}","name":"Delete process table by name","method":"DELETE","Req":{"url_params":[{"key":"table","val":"test_table","active":true},{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"apic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object"}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{}"},"data":"{}"},{"_id":"1624680397949-58afaa3b8c6d5","_time":1624680397949,"_modified":1624680397949,"url":"{{scheme}}{{host}}/process/{{processId}}","name":"Delete process by processId","method":"DELETE","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"apic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object"}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{}"},"data":"{}"},{"_id":"1624686499428-6c52bb036910b","_time":1624686499428,"_modified":1624686499428,"url":"{{scheme}}{{host}}/authorizations","name":"Create authorization","method":"POST","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"apic.test('$response.data.priority should be equal to 0', function(){\n\texpect($response.data.priority).to.be.eql(0);\n})\n\napic.test('$response.data.user_id should be equal to 0', function(){\n\texpect($response.data.user_id).to.be.eql(0);\n})\n\napic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})","savedResp":[],"respCodes":[{"code":"201","data":{"type":"object","properties":{"id":{"type":"integer"},"userId":{"type":"integer"},"processId":{"type":"integer"},"tableName":{"type":"string"},"getList":{"type":"boolean"},"getOne":{"type":"boolean"},"create":{"type":"boolean"},"update":{"type":"boolean"},"delete":{"type":"boolean"}}}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{\n\t\"user_id\": 0,\n\t\"process_id\": 1\n\n}"},"data":"{\n\t\"user_id\": 0,\n\t\"process_id\": 1\n\n}"},{"_id":"1624681446279-bb71fa79a755a","_time":1624681446279,"_modified":1624681446279,"url":"{{scheme}}{{host}}/authorizations","name":"Get list of authorizations","method":"GET","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"apic.test('$response.data[0].process_id should be equal to 1', function(){\n\texpect($response.data[0].process_id).to.be.eql(1);\n})\n\napic.test('$response.data[0].process_id should be equal to 1', function(){\n\texpect($response.data[0].process_id).to.be.eql(1);\n})\n","savedResp":[{"status":"200","data":"[\n  {\n    \"create\": \"None\",\n    \"delete\": \"None\",\n    \"id\": 1,\n    \"priority\": 0,\n    \"process_crud\": \"None\",\n    \"process_id\": 1,\n    \"read\": \"None\",\n    \"read_all\": \"None\",\n    \"table\": \"None\",\n    \"table_crud\": \"None\",\n    \"update\": \"None\",\n    \"user_id\": 0\n  }\n]\n","time":"146 ms","size":"267 B","headers":{"content-length":"267","content-type":"application/json","date":"Sat, 26 Jun 2021 03:17:05 GMT","server":"Werkzeug/1.0.1 Python/3.6.8"}}],"respCodes":[{"code":"200","data":{"type":["array"],"items":{"type":["object"],"properties":{"id":{"type":["integer"]},"userId":{"type":["integer"]},"processId":{"type":["integer"]},"tableName":{"type":["string"]},"getList":{"type":["boolean"]},"getOne":{"type":["boolean"]},"create":{"type":["boolean"]},"update":{"type":["boolean"]},"delete":{"type":["boolean"]}}}}},{"code":"400","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"401","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"403","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}},{"code":"404","data":{"type":["object"],"properties":{"errCode":{"type":["integer"]},"message":{"type":["string"]}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"}}},{"_id":"1624688431361-0902698547c18","_time":1624688431361,"_modified":1624688431361,"url":"{{scheme}}{{host}}/authorizations/1","name":"Get detail of authorization by authorization_id","method":"GET","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"\n\napic.test('$response.data.user_id should be equal to 0', function(){\n\texpect($response.data.user_id).to.be.eql(0);\n})\n\napic.test('$response.data.id should be equal to 1', function(){\n\texpect($response.data.id).to.be.eql(1);\n})\n\napic.test('$response.data.process_id should be equal to 1', function(){\n\texpect($response.data.process_id).to.be.eql(1);\n})\n","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object","properties":{"id":{"type":"integer"},"userId":{"type":"integer"},"processId":{"type":"integer"},"tableName":{"type":"string"},"getList":{"type":"boolean"},"getOne":{"type":"boolean"},"create":{"type":"boolean"},"update":{"type":"boolean"},"delete":{"type":"boolean"}}}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"}}},{"_id":"1624687098124-d693aa43baa88","_time":1624687098124,"_modified":1624687098124,"url":"{{scheme}}{{host}}/authorizations/1","name":"Update authorization details by authorization_id","method":"PUT","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"apic.test('$response.data.update should be equal to true', function(){\n\texpect($response.data.update).to.be.eql(true);\n})\n\napic.test('$response.data.delete should be equal to true', function(){\n\texpect($response.data.delete).to.be.eql(true);\n})\n\napic.test('$response.data.id should be equal to 1', function(){\n\texpect($response.data.id).to.be.eql(1);\n})\n\napic.test('$response.data.process_id should be equal to 1', function(){\n\texpect($response.data.process_id).to.be.eql(1);\n})\n\napic.test('$response.data.user_id should be equal to 0', function(){\n\texpect($response.data.user_id).to.be.eql(0);\n})\n","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object","properties":{"id":{"type":"integer"},"userId":{"type":"integer"},"processId":{"type":"integer"},"tableName":{"type":"string"},"getList":{"type":"boolean"},"getOne":{"type":"boolean"},"create":{"type":"boolean"},"update":{"type":"boolean"},"delete":{"type":"boolean"}}}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{\n\t\"user_id\": 0,\n\t\"process_id\": 1,\n\t\"get_all\": true,\n\t\"read\": true,\n\t\"create\": false,\n\t\"update\": true,\n\t\"delete\": true,\n\t\"table_crud\":false,\n\t\"process_crud\":false,\n\t\"priority\":1\n}"},"data":"{\n\t\"user_id\": 0,\n\t\"process_id\": 1,\n\t\"get_all\": true,\n\t\"read\": true,\n\t\"create\": false,\n\t\"update\": true,\n\t\"delete\": true,\n\t\"table_crud\":false,\n\t\"process_crud\":false,\n\t\"priority\":1\n}"},{"_id":"1624683568256-9acb02b720b2a","_time":1624683568256,"_modified":1624683568256,"url":"{{scheme}}{{host}}/authorizations/1","name":"Delete authorization by authorization_id","method":"DELETE","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"apic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object"}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{}"},"data":"{}"},{"_id":"1624691319835-c9fff987236a9","_time":1624691319835,"_modified":1624691319835,"url":"{{scheme}}{{host}}/logs","name":"Create log","method":"POST","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"\napic.test('$response.data.parameters should  exist in response', function(){\n\t expect($response.data.parameters).not.to.be.undefined;\n})\n\napic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})\napic.test('$response.data.user_id should be equal to 0', function(){\n\texpect($response.data.user_id).to.be.eql(0);\n})\n","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object","properties":{"id":{"type":"integer"},"userId":{"type":"integer"},"processId":{"type":"integer"},"tableName":{"type":"string"},"route":{"type":"string"},"method":{"type":"string"},"parameters":{"type":"string"}},"required":["id","userId","processId","tableName","route","method","parameters"]}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{\n\t\"user_id\": 0,\n\t\"process_id\": 1,\n\t\"table\": \"test_table\",\n\t\"route\": \"/authorizations\",\n\t\"method\": \"GET\"\n}"},"data":"{\n\t\"user_id\": 0,\n\t\"process_id\": 1,\n\t\"table\": \"test_table\",\n\t\"route\": \"/authorizations\",\n\t\"method\": \"GET\"\n}"},{"_id":"1624691296372-3448610e342e7","_time":1624691296372,"_modified":1624691296372,"url":"{{scheme}}{{host}}/logs","name":"Get list of logs","method":"GET","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"\n\napic.test('$response.data[0].parameters should  exist in response', function(){\n\t expect($response.data[0].parameters).not.to.be.undefined;\n})\n\napic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})\n\napic.test('$response.data[0].user_id should be equal to 0', function(){\n\texpect($response.data[0].user_id).to.be.eql(0);\n})\n","savedResp":[],"respCodes":[{"code":"200","data":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer"},"userId":{"type":"integer"},"processId":{"type":"integer"},"tableName":{"type":"string"},"route":{"type":"string"},"method":{"type":"string"},"parameters":{"type":"string"}},"required":["id","userId","processId","tableName","route","method","parameters"]}}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":""}},{"_id":"1624691389903-dac5496c115d4","_time":1624691389903,"_modified":1624691389903,"url":"{{scheme}}{{host}}/logs/1","name":"Get detail of log by logId","method":"GET","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"apic.test('$response.data.parameters should  exist in response', function(){\n\t expect($response.data.parameters).not.to.be.undefined;\n})\n\napic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})\n\n\napic.test('$response.data.user_id should be equal to 0', function(){\n\texpect($response.data.user_id).to.be.eql(0);\n})\n","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object","properties":{"id":{"type":"integer"},"userId":{"type":"integer"},"processId":{"type":"integer"},"tableName":{"type":"string"},"route":{"type":"string"},"method":{"type":"string"},"parameters":{"type":"string"}},"required":["id","userId","processId","tableName","route","method","parameters"]}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"}}},{"_id":"1624691475522-029e3592ac21a","_time":1624691475522,"_modified":1624691475522,"url":"{{scheme}}{{host}}/logs/1","name":"Update log details by logId","method":"PUT","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"\napic.test('$response.data.parameters should  exist in response', function(){\n\t expect($response.data.parameters).not.to.be.undefined;\n})\n\napic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})\n\napic.test('$response.data.user_id should be equal to 0', function(){\n\texpect($response.data.user_id).to.be.eql(0);\n})\n\napic.test('$response.data.route should be equal to \"/authorizations1\"', function(){\n\texpect($response.data.route).to.be.eql(\"/authorizations1\");\n})\n","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object","properties":{"id":{"type":"integer"},"userId":{"type":"integer"},"processId":{"type":"integer"},"tableName":{"type":"string"},"route":{"type":"string"},"method":{"type":"string"},"parameters":{"type":"string"}},"required":["id","userId","processId","tableName","route","method","parameters"]}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{\n\t\"user_id\": 0,\n\t\"process_id\": 1,\n\t\"table\": \"test_table\",\n\t\"route\": \"/authorizations1\",\n\t\"method\": \"GET\"\n}"},"data":"{\n\t\"user_id\": 0,\n\t\"process_id\": 1,\n\t\"table\": \"test_table\",\n\t\"route\": \"/authorizations1\",\n\t\"method\": \"GET\"\n}"},{"_id":"1624691499876-cb7800e6c7a5d","_time":1624691499876,"_modified":1624691499876,"url":"{{scheme}}{{host}}/logs/1","name":"Delete log by logId","method":"DELETE","Req":{"url_params":[{"key":"","val":"","active":true}],"headers":[{"key":"Authorization","val":"{{apic.basicAuth(basicAuthUser, basicAuthPassword)}}","active":true},{"key":"","val":"","active":true}]},"prescript":"","postscript":"apic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})","savedResp":[],"respCodes":[{"code":"200","data":{"type":"object"}},{"code":"400","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"401","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"403","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}},{"code":"404","data":{"type":"object","properties":{"errCode":{"type":"integer"},"message":{"type":"string"}},"required":["errCode","message"]}}],"Body":{"type":"raw","selectedRaw":{"name":"JSON","val":"application/json"},"rawData":"{}"},"data":"{}"}],"env":"1610343320724-1ad761af5695","expanded":"opened","reqIdToOpen":"1624691484956-e33c2a4f9c9e9###25","envVars":[{"key":"host","val":"127.0.0.1:5000"},{"key":"basePath","val":""},{"key":"scheme","val":"http://"},{"key":"basicAuthUser","val":"test"},{"key":"basicAuthPassword","val":"pass"},{"key":"userId","val":"0"},{"key":"newUserId","val":"1"},{"key":"processId","val":"1"}]}}