openapi: 3.0.3
info:
  title: DataLogger
  version: "0.1"
  description: Configurable structure, configurable storage, generic data-logger API.
  termsOfService: MIT
  contact:
    name: Harvey Bastidas Caicedo
    url: https://profile.codersrank.io/user/harveybc
    email: harveybc@ingeni-us.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
    x-last-modified: 1605675369950
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/3/32/Eye_of_Horus_Right.svg
servers:
  - url: https://datalogger.ingeni-us.com
    description: El prop贸sito de este subsistema es proveer conectividad con
      diferentes motores de bases de datos configurables via plugins, implementa
      un sistema de Autenticaci贸n, Autorizaci贸n y Accounting (AAA), que permite
      asegurar, controlar y registrar el acceso a los datos de los usuarios para
      proveer trazabilidad de todas las operaciones realizadas, con lo que se
      dispone de un historial de datos y operaciones. Usa un sistema
      configurable de estructura de datos basado en procesos que captan
      informaci贸n para almacenarla en tablas configurables de la base de datos.
    x-last-modified: 1605674826667
paths:
  /authorization:
    summary: Authorization table
    description: Contains the authorization registers for users to perform
      operations  in processes.
    get:
      tags: []
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Array of registers of the authorization table
                type: array
                items: {}
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: Returns an array of registers of the authorization table
          x-last-modified: 1606643755894
        data:
          content:
            application/json:
              schema:
                description: ""
                pattern: ""
                type: integer
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: the id field of the new register in the authorization table.
          x-last-modified: 1606681516652
      operationId: authorizationList
      summary: List of authorization registers
      description: List of registers of the authorization table, limited to creator
        and administrator.
    post:
      requestBody:
        description: Data for the register creation
        content:
          application/json:
            schema:
              required:
                - id
              type: object
            encoding:
              encoding: utf-8
        required: true
      tags: []
      responses:
        data:
          content:
            application/json:
              schema:
                description: ""
                pattern: ""
                type: integer
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: the id field of the new register in the authorization table.
          x-last-modified: 1606681516652
      operationId: authorizationCreate
      summary: Create an authorization register
      description: Create a register in the authorization table, operation allowed
        only to the creator and admin users.
    x-last-modified: 1606473222852
  /accounting:
    summary: Provides accountability of all performed operations.
    description: "This table contains the logs of all operations with metadata to
      make sure that all actions are accounted for. "
    get:
      tags: []
      parameters:
        - deprecated: false
          name: filter
          description: filter to select the required registers from an accounting register
            list. Limited to the event creator and admin users.
          schema:
            type: string
          in: query
          required: true
          allowEmptyValue: true
          x-last-modified: 1606682585853
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Array of JSON representations of the accounting registers.
                type: array
                items: {}
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: "\tArray of accounting registers."
          x-last-modified: 1606682713996
      operationId: accountingList
      summary: List of accounting registers
      description: Returns a list of accounting registers
    post:
      requestBody:
        description: A
        content:
          application/json:
            schema:
              type: object
        required: false
      tags: []
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                pattern: ""
                type: integer
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: the id field in the accounting table of the new register.
          x-last-modified: 1606683152173
      operationId: accountingCreate
      summary: Create a new accounting register.
      description: "\tCreate a new register in the accounting table."
    x-last-modified: 1606473503996
  /process:
    summary: Processes that generate configurable structure information
    description: Performs CRUD on the process table, that contains the configurable
      structure of information to be stored in child tables.
    get:
      requestBody:
        description: Data used to create the register
        content:
          application/json:
            schema:
              required:
                "0": name
                "1": username
              type: object
        required: true
      tags:
        - p2p
      responses:
        data:
          content:
            application/json:
              schema:
                description: Array of returned registers in the process table
                type: array
                items: {}
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: "\tReturns a list of processes."
          x-last-modified: 1606622921057
      operationId: processList
      summary: List processes
      description: >
        Returns a list of processes created by the current user, also admins are
        authorized.
    post:
      requestBody:
        description: Data used to create the register
        content:
          application/json:
            schema:
              description: ""
              required:
                "0": name
                "1": username
              type: object
              externalDocs:
                description: ""
                url: ""
              example: ""
            example: ""
        required: true
      tags:
        - p2p
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                pattern: ""
                type: integer
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: Returns the id of the newly created register in the process table
          x-last-modified: 1606623392711
      operationId: processCreate
      summary: Create a new process
      description: >
        Create a register in the process table with the user_id field set to the
        current authenticated user.
    x-last-modified: 1606473630710
  "/user/{id}":
    get:
      tags:
        - user
      parameters:
        - deprecated: false
          name: id
          description: Id field of the users table
          schema:
            type: integer
          in: path
          required: false
          x-last-modified: 1606533718204
      responses:
        data:
          content:
            application/json:
              schema:
                description: User register
                required: []
                type: object
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: Contains the register of the user without the password hash
          x-last-modified: 1606533623763
      operationId: userGet
      summary: Returns a register of the user table
      description: Returns a register of the users table, the access to this operation
        is restricted to administrator users and the same user, filter the
        register by using parameters.
    put:
      requestBody:
        description: The user register to be updated in JSON format
        content:
          application/json:
            schema:
              description: The data to be updated in the user register
              required:
                "0": username
                "1": email
                "2": password
              type: object
            encoding:
              encoding: utf-8
        required: true
      parameters:
        - deprecated: false
          name: id
          description: If field of the required register in the user table
          schema:
            type: integer
          in: path
          required: false
          x-last-modified: 1606623576620
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                pattern: ""
                type: integer
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: Returns the id of the modified register in the user table.
          x-last-modified: 1606623716181
      operationId: userUpdate
      summary: Update an user register
      description: Update a register in the users table, the access to this operation
        is restricted to administrator users and the creator user. Returns the
        modified user register in JSON format.
    delete:
      parameters:
        - deprecated: false
          name: id
          description: Id field of the user table to be deleted.
          schema:
            type: integer
          in: path
          required: false
          x-last-modified: 1606623808373
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                pattern: ""
                type: integer
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: Returns the id of the deleted register
          x-last-modified: 1606623841900
      operationId: userDelete
      summary: Delete a user register
      description: Delete a register in the users table, the access to this operation
        is restricted to administrator users and the same user. Returns the idof
        the deleted user register in JSON format.
    x-last-modified: 1606529505812
  "/process/{id}":
    summary: Get a process register
    description: Get a process created by the user, restricted to the creator and admins.
    get:
      tags:
        - get
      parameters:
        - deprecated: false
          name: id
          description: The id field of the process table used to search the required
            process.
          schema:
            type: integer
          in: path
          required: false
          x-last-modified: 1606622513134
      responses:
        data:
          content:
            application/json:
              schema:
                description: ""
                required:
                  "0": id
                  "1": name
                  "2": description
                  "3": user_id
                type: object
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: The data contains a JSON representation of the requested register
            from the process table.
          x-last-modified: 1606622631300
      operationId: processGet
      summary: Returns a process register
      description: Returns a process register filtered by if field.
    put:
      requestBody:
        description: "\tThe metadata to update the process register"
        content:
          application/json:
            schema:
              required:
                "0": name
                "1": description
              type: object
            encoding:
              encoding: utf-8
        required: true
      parameters:
        - deprecated: false
          name: id
          description: The id field of the register to be updated in the process table.
          schema:
            type: integer
          in: path
          required: false
          x-last-modified: 1606624192783
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                pattern: ""
                type: integer
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: Returns the id of the updated register
          x-last-modified: 1606624314996
      operationId: processUpdate
      summary: Update the metadata of a process
      description: Update the metadata fields in a process register.
    delete:
      parameters:
        - deprecated: false
          name: id
          description: The id field of the register in the process table to be deleted.
          schema:
            type: integer
          in: path
          required: false
          x-last-modified: 1606624438917
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                pattern: ""
                type: integer
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: "\tThe id of the deleted register "
          x-last-modified: 1606624476779
      operationId: processDelete
      summary: Delete a process
      description: Delete a register of the process table, limited to the creator and
        admin users.
    x-last-modified: 1606622350161
  "/authorization/{id}":
    summary: Operations that require the id parameter
    description: These operations require a path parameter callaed id that is the id
      field of an existing register in the authorization table.
    get:
      tags: []
      parameters:
        - deprecated: false
          name: id
          description: Id field from the required  authorization table register.
          schema:
            type: integer
          in: path
          required: false
          allowEmptyValue: false
          x-last-modified: 1606633873406
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                required:
                  "0": user_id
                  "1": process_id
                  "2": policy
                type: object
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: "\tReturns the requested register from the authorizations table."
          x-last-modified: 1606633953969
      operationId: authorizationGet
      summary: Get an authorization register
      description: |
        Returns a register from the authorization table.
    put:
      requestBody:
        description: T
        content:
          application/json:
            schema:
              required:
                "0": user_id
                "1": process_id
                "2": policy
              type: object
            encoding:
              encoding: utf-8
        required: false
      tags: []
      parameters:
        - deprecated: false
          name: id
          description: id field from the authorization table.
          schema:
            type: integer
          in: path
          required: false
          x-last-modified: 1606634091020
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                pattern: ""
                type: integer
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: Returns the id of the deleted register
          x-last-modified: 1606643382442
      operationId: authorizationUpdate
      summary: Update an authorization register
      description: Update an authorization register selected by id field as path parameter.
    delete:
      tags: []
      parameters:
        - deprecated: false
          name: id
          description: id field of the authorization table
          schema:
            type: integer
          in: path
          required: false
          x-last-modified: 1606643333115
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                pattern: ""
                type: integer
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: Returns the id of the deleted register
          x-last-modified: 1606643382442
      operationId: authorizationDelete
      summary: Delete an authorization register
      description: "\tDelete a register from the authorization table."
    x-last-modified: 1606624638843
  "/accounting/{id}":
    summary: Returns an individual accounting register
    description: "\tRetruns a register from the accounting table."
    get:
      tags: []
      parameters:
        - deprecated: false
          name: id
          description: id of the register in the accounting table
          schema:
            type: integer
          in: path
          required: false
          x-last-modified: 1606683691831
      responses:
        data:
          content:
            application/json:
              schema:
                description: ""
                required: []
                type: object
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: Returns the selected register from the accounting table in JSON
            format.
          x-last-modified: 1606683738371
      operationId: accountingGet
      summary: Returns an inividual accounting register
      description: Returns an individual register from the accounting table, this
        operation is restricted to the process creator and admin users.
    delete:
      parameters:
        - deprecated: false
          name: id
          description: Process_id field from the accounting table.
          schema:
            type: integer
          in: path
          required: false
          x-last-modified: 1606683463876
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                pattern: ""
                type: integer
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: All required records were deleted, returns the process_id of them.
          x-last-modified: 1606683536122
      operationId: accountingDelete
      summary: Delete all accounting registers for a process
      description: Delete all registers for a process in the accounting table.
    x-last-modified: 1606683276914
  "/table/{pid}/{table_name}":
    summary: operations that do not require register id
    description: The creation and list of registers of a table
    get:
      tags: []
      parameters:
        - deprecated: false
          name: table_name
          description: name of the table belonging to the process with id = pid
          schema:
            type: string
          in: path
          required: false
          x-last-modified: 1606889003490
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                pattern: ""
                type: array
                items: {}
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
          description: Returns a list of registers of the specified table (table_name)
            from a specified process (pid)
          x-last-modified: 1606891884494
      operationId: tableList
      summary: List the registers of a process table
      description: List the registers of a table that belongs to a process.
    post:
      tags: []
      operationId: tableCreate
      summary: Creates a register in a table configured in a process
      description: Creates a register in a table configured in a process
    x-last-modified: 1606842081048
  "/table/{pid}/{table_name}/{id}":
    summary: process table individual registers operations
    description: Operations on registers from a table from a process
    get:
      tags: []
    put:
      tags: []
    delete:
      tags: []
    x-last-modified: 1606935079975
  /user:
    summary: User model
    description: Performs CRUD on the user table
    get:
      requestBody:
        description: The user register to be created in JSON format
        content:
          application/json:
            schema:
              description: A user register in JSON format, without the "id" field that is
                assigned by the API. The password field is the HASH (your own
                delicious prefered hash flavour!) of the actual password.
              required:
                "0": email
                "1": username
                "2": password
                "3": is_admin
              type: object
              properties:
                email:
                  description: The user's email.
                  type: string
                username:
                  description: The user's username.
                  type: string
                password:
                  description: The user's password.
                  type: string
                is_admin:
                  description: If true, set the user in Administrator role.
                  type: string
              example:
                email: test0@test.com
                username: test
                password: XXXXYEAHXXXXXXXXXX
                is_admin: true
            encoding:
              encoding: utf-8
        required: true
      tags:
        - p2p
      responses:
        "200":
          content:
            application/json:
              schema:
                description: User table registers list
                type: array
                items: {}
                externalDocs:
                  description: ""
                  url: ""
                example: ""
              example: ""
              encoding: ""
          description: "Returns the list of users "
          x-last-modified: 1605737851531
          headers: {}
          links: {}
      operationId: userList
      summary: Returns a list of registers of the user table
      description: Returns a list of register of the users table, the access to this
        operation is restricted to administrator users and the same user, filter
        the register by using parameters.
    post:
      requestBody:
        description: |
          Data used to crete a new user register
        content:
          application/json: {}
        required: false
      tags:
        - p2p
      operationId: userCreate
      summary: Create a user
      description: Create a new register in the user table.
    x-last-modified: 1606935100097
components:
  schemas:
    process:
      description: Process model
      type: object
      example:
        id: 0
        user_id: 0
        tables:
          "0": training
          "1": validation
      x-last-modified: 1606723400447
    user:
      description: User model
      type: object
      example:
        id: 0
        username: test
        email: harveybc@ingeni-us.com
        password: XXXXXXXSALTEDHASH
        is_admin: true
      x-last-modified: 1606723963467
    authorization:
      description: authorization model
      type: object
      example:
        id: 0
        process_id: 0
        table: training
        get: true
        create: true
        update: true
        delete: true
        list: true
      x-last-modified: 1606725062954
    accounting:
      description: accounting model
      type: object
      example:
        id: 0
        user_id: 0
        process: 0
        method: GET
        route: /user/0
        response: 200
      x-last-modified: 1606726649211
  securitySchemes:
    JWTAuth:
      scheme: bearer
      bearerFormat: JWT
      type: http
      description: |-
        Example: 
        > Authorization: Bearer <token>
      x-last-modified: 1605675020016
    BasicAuth:
      scheme: basic
      type: http
      description: |-
        Example: 
        > Authorization: Basic ZGVtbzpwQDU1dzByZA ==
      name: BASIC
      in: header
      x-last-modified: 1605675017712
    OpenIDAuth:
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
      type: openIdConnect
      description: OpenID Connect (OIDC) is an identity layer built on top of the
        OAuth 2.0 protocol.
      x-last-modified: 1605675021055
  headers: {}
  responses: {}
  parameters: {}
security:
  - JWTAuth: []
  - OpenIDAuth: []
tags:
  - name: p2p
    description: ""
  - name: user
    description: user
    externalDocs: {}
    x-last-modified: 1606198251638
  - name: list
    description: list
    externalDocs: {}
    x-last-modified: 1606198255265
  - name: admin
    description: admin
    externalDocs: {}
    x-last-modified: 1606198259280
  - name: get
    description: get
    externalDocs: {}
    x-last-modified: 1606333143976
  - name: create
    description: create
    externalDocs: {}
    x-last-modified: 1606430897619
  - name: post
    description: post
    externalDocs: {}
    x-last-modified: 1606844789201
externalDocs:
  description: "Repository README.md file. "
  url: https://github.com/harveybc/datalogger
